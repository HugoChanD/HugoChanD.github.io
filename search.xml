<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[树莓派利用ffmpeg推流到直播平台]]></title>
      <url>http://www.hugospi.com/2017/01/05/raspberry-ffmpeglive/</url>
      <content type="html"><![CDATA[<p>1.安装ffmpeg<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install ffmpeg</div></pre></td></tr></table></figure></p>
<p>2.多视频文件直播推流<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#随机播放添加电影名到视频右上角</span></div><div class="line"><span class="keyword">for</span>((;;)); <span class="keyword">do</span> i=`ls *.flv | sort -R | head -n1`  &amp;&amp; ffmpeg -re -i <span class="variable">$i</span> -acodec copy -vcodec libx264 -preset veryfast   -vf  <span class="string">"drawtext=fontsize=15:fontcolor=white:fontfile=/usr/share/fonts/TTF/ziti.TTF:text='电影名\:<span class="variable">$&#123;i%%.*&#125;</span>':x=w-tw"</span> -acodec libmp3lame -b:a 96k -ar 44100  <span class="_">-f</span> flv <span class="string">"rtmp://xl.live-send.acg.tv/live-xl/?streamname=live_19040159_8820556&amp;key=15aadc9874f098fdcd17d08f03566f02"</span>;sleep 1;<span class="keyword">done</span></div></pre></td></tr></table></figure></p>
<p>其中“rtmp://xl.live-send.acg.tv/live-xl/?streamname=live_19040159_8820556&amp;key=15aadc9874f098fdcd17d08f03566f02”为推流地址，获取方式是开播之后rtmp地址+直播码</p>
<p>具体ffmpeg参数可以到官网查询<br><a href="https://ffmpeg.org/documentation.html" target="_blank" rel="external">https://ffmpeg.org/documentation.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[编译php出现 [sapi/cli/php] Error 1 解决办法]]></title>
      <url>http://www.hugospi.com/2016/12/27/linux-php-error/</url>
      <content type="html"><![CDATA[<p>编译php make的时候出现以下错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">collect2: ld returned 1 <span class="built_in">exit</span> status</div><div class="line">make: *** [sapi/cli/php] Error 1</div></pre></td></tr></table></figure></p>
<p>google之，以此记录下</p>
<p>在安裝 PHP 到系统中时要是发生「undefined reference to libiconv_open’」之类的错误信息，<br>那表示在「./configure 」沒抓好一些环境变数值。错误发生点在建立「-o sapi/cli/php」是出错，<br>没給到要 link 的 iconv 函式库参数。 </p>
<p>解决方法：</p>
<p>编辑Makefile 查找类似 EXTRA_LIBS = ….. -lcrypt 在最后加上 -liconv，例如:<br>EXTRA_LIBS = ….. -lcrypt -liconv 然后重新再次 make 即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[编译安装Mysql(转载)]]></title>
      <url>http://www.hugospi.com/2016/12/27/linux-mysql/</url>
      <content type="html"><![CDATA[<p>1.安装依赖包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install make gcc-c++ cmake bison-devel  ncurses-devel</div></pre></td></tr></table></figure></p>
<p>2.下载mysql<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://101.110.118.68/cdn.mysql.com/Downloads/MySQL-5.5/mysql-5.5.54.tar.gz</div><div class="line">tar -zxvf mysql-5.5.54.tar.gz</div><div class="line"><span class="built_in">cd</span> mysql-5.5.54</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>3.编译安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">cmake \</div><div class="line">-DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mysql \</div><div class="line">-DMYSQL_DATADIR=/usr/<span class="built_in">local</span>/mysql/data \</div><div class="line">-DSYSCONFDIR=/etc \</div><div class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_MEMORY_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_READLINE=1 \</div><div class="line">-DMYSQL_UNIX_ADDR=/var/lib/mysql/mysql.sock \</div><div class="line">-DMYSQL_TCP_PORT=3306 \</div><div class="line">-DENABLED_LOCAL_INFILE=1 \</div><div class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</div><div class="line">-DEXTRA_CHARSETS=all \</div><div class="line">-DDEFAULT_CHARSET=utf8 \</div><div class="line">-DDEFAULT_COLLATION=utf8_general_ci</div><div class="line"></div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<p>编译参数说明：<a href="http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html" target="_blank" rel="external">http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html</a></p>
<p>4.配置Mysql</p>
<p>创建mysql用户与组<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">groupadd mysql</div><div class="line">useradd -g mysql mysql</div></pre></td></tr></table></figure></p>
<p>修改/usr/local/mysql权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R mysql:mysql /usr/<span class="built_in">local</span>/mysql</div></pre></td></tr></table></figure></p>
<p>初始化<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql</div><div class="line"><span class="comment">#创建数据库和表</span></div><div class="line">scripts/mysql_install_db --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/usr/<span class="built_in">local</span>/mysql/data --user=mysql</div></pre></td></tr></table></figure></p>
<p>启动Mysql<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#添加服务，设置开机启动</span></div><div class="line">cp support-files/mysql.server /etc/init.d/mysql</div><div class="line">chkconfig mysql on</div><div class="line">service mysql start</div></pre></td></tr></table></figure></p>
<p>MySQL启动成功后，root默认没有密码，我们需要设置root密码。</p>
<p>设置之前，我们需要先设置PATH，要不不能直接调用mysql</p>
<p>修改/etc/profile文件，在文件末尾添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PATH=/usr/<span class="built_in">local</span>/mysql/bin:<span class="variable">$PATH</span></div><div class="line"><span class="built_in">export</span> PATH</div></pre></td></tr></table></figure></p>
<p>配置生效</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure>
<p>执行下面的命令修改root密码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql -uroot  </div><div class="line">mysql&gt; SET PASSWORD = PASSWORD(<span class="string">'123456'</span>);</div></pre></td></tr></table></figure>
<p>若要设置root用户可以远程访问，执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'172.16.%'</span> IDENTIFIED BY <span class="string">'password'</span> WITH GRANT OPTION;</div></pre></td></tr></table></figure>
<p>配置防火墙<br>防火墙的3306端口默认没有开启，若要远程访问，需要开启这个端口</p>
<p>打开/etc/sysconfig/iptables</p>
<p>在“-A INPUT –m state –state NEW –m tcp –p –dport 22 –j ACCEPT”，下添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-A INPUT -m state --state NEW -m tcp -p -dport 3306 -j ACCEPT</div></pre></td></tr></table></figure></p>
<p>然后保存，并关闭该文件，在终端内运行下面的命令，刷新防火墙配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables restart</div></pre></td></tr></table></figure>
<p>OK，一切配置完毕，你可以访问你的MySQL了~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ffprobe查找视频分辨率大于900的文件]]></title>
      <url>http://www.hugospi.com/2016/12/19/linux-ffprobe/</url>
      <content type="html"><![CDATA[<p>ffmpeg功能强大，可以通过命令行来对音视频进行处理</p>
<p>1.OSX下安装ffmpeg<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install ffmpeg</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>2.使用ffprobe获取视频文件信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffprobe -print_format json -show_format -show_streams -i ./video/file.mp4</div></pre></td></tr></table></figure></p>
<pre><code>其中：  

-print_format json（以json格式输出）， 

-show_format（输出封装格式信息），

-show_streams（输出流信息)

-i ./video/file.mp4（输入文件）
</code></pre><p>3.查找分辨率大于900的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> *;<span class="keyword">do</span> ffprobe -v quiet -print_format json -show_format -show_streams -i <span class="variable">$i</span>|<span class="keyword">if</span> [ $(jq <span class="string">'.streams[0].width'</span>) <span class="_">-gt</span> <span class="string">"900"</span> ];<span class="keyword">then</span>  <span class="built_in">echo</span> <span class="variable">$i</span> &gt;&gt; file1 ;<span class="keyword">fi</span>;<span class="keyword">done</span></div></pre></td></tr></table></figure></p>
<pre><code>其中jq为json解析工具
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自建梯子-搬瓦工搭建Shadowsocks服务加速(转载)]]></title>
      <url>http://www.hugospi.com/2016/12/14/VPS-Shadowsocks/</url>
      <content type="html"><![CDATA[<p>购买vps及其ssh登录</p>
<p>1.安装Shadowsocks<br>    一键安装shadowsocks-go版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh</div><div class="line">chmod +x shadowsocks-go.sh</div><div class="line">./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>客户端软件:<br>    <a href="https://github.com/shadowsocks" target="_blank" rel="external">https://github.com/shadowsocks</a> (对应版本下载)</p>
<p>3.Shadowsocks优化<br>    安装net-speeder 一键安装脚本</p>
<pre><code>ubuntu:
执行如下 shell 命令即可，不需要多余操作，会自动添加开机启动项。
搬瓦工 VPS 亲测有效。
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 步骤1：</span></div><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/tennfy/debian_netspeeder_tennfy/master/debian_netspeeder_tennfy.sh</div><div class="line"></div><div class="line"><span class="comment"># 步骤2：</span></div><div class="line">chmod a+x debian_netspeeder_tennfy.sh</div><div class="line"></div><div class="line"><span class="comment"># 步骤3：</span></div><div class="line">bash debian_netspeeder_tennfy.sh</div></pre></td></tr></table></figure>
<pre><code>centos:
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">wget --no-check-certificate https://gist.github.com/LazyZhu/dc3f2f84c336a08fd6a5/rawd8aa4bcf955409e28a262ccf52921a65fe49da99/net_speeder_lazyinstall.sh</div><div class="line"></div><div class="line">sh net_speeder_lazyinstall.sh</div></pre></td></tr></table></figure>
<pre><code>centos手动安装
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#先安装依赖</span></div><div class="line">wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div><div class="line">rpm -ivh epel-release-X-Y.noarch.rpm</div><div class="line">yum install libnet libpcap libnet-devel libpcap-devel</div><div class="line"></div><div class="line"><span class="comment">#安装主程序</span></div><div class="line">git <span class="built_in">clone</span> https://github.com/snooda/net-speeder</div><div class="line"><span class="built_in">cd</span> /var/net-speeder <span class="comment">#这一步是进去下载的文件夹</span></div><div class="line">sudo chmod +x ./build.sh</div><div class="line">sudo bash ./build.sh -DCOOKED</div><div class="line">sudo cp ./net_speeder /usr/<span class="built_in">local</span>/bin/</div><div class="line"></div><div class="line"><span class="comment">#开机启动</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"nohup /usr/local/bin/net_speeder venet0 "</span>ip<span class="string">" &gt;/dev/null 2&gt;&amp;1 &amp;"</span> &gt;&gt; /etc/rc.local</div></pre></td></tr></table></figure>
<pre><code>仍后台运行
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup net_speeder venet0 &quot;ip&quot; &gt; /dev/null 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure>
<pre><code>bench.sh显示当前测试的各种系统信息
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/teddysun/across/blob/master/bench.sh</div><div class="line">wget -qO- bench.sh | bash</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用aria2突破百度云下载限速]]></title>
      <url>http://www.hugospi.com/2016/10/12/mac-baiduyun-aria2/</url>
      <content type="html"><![CDATA[<p>1.安装aria2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install aria2</div></pre></td></tr></table></figure></p>
<p>2.配置aria2：<br>使用rpc模式，这种方式启动aria会安静等待下载请求，默默驻留后台<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir ~/.aria2</div><div class="line">vi ~/.aria2/aria2.conf</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>编辑aria2.conf文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#用户名</span></div><div class="line"><span class="comment">#rpc-user=user</span></div><div class="line"><span class="comment">#密码</span></div><div class="line"><span class="comment">#rpc-passwd=passwd</span></div><div class="line"><span class="comment">#上面的认证方式不建议使用,建议使用下面的token方式</span></div><div class="line"><span class="comment">#设置加密的密钥</span></div><div class="line"><span class="comment">#rpc-secret=token</span></div><div class="line"><span class="comment">#允许rpc</span></div><div class="line"><span class="built_in">enable</span>-rpc=<span class="literal">true</span></div><div class="line"><span class="comment">#允许所有来源, web界面跨域权限需要</span></div><div class="line">rpc-allow-origin-all=<span class="literal">true</span></div><div class="line"><span class="comment">#允许外部访问，false的话只监听本地端口</span></div><div class="line">rpc-listen-all=<span class="literal">true</span></div><div class="line"><span class="comment">#RPC端口, 仅当默认端口被占用时修改</span></div><div class="line">rpc-listen-port=6801</div><div class="line"><span class="comment">#最大同时下载数(任务数), 路由建议值: 3</span></div><div class="line">max-concurrent-downloads=5</div><div class="line"><span class="comment">#断点续传</span></div><div class="line"><span class="built_in">continue</span>=<span class="literal">true</span></div><div class="line"><span class="comment">#同服务器连接数</span></div><div class="line">max-connection-per-server=5</div><div class="line"><span class="comment">#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要</span></div><div class="line">min-split-size=10M</div><div class="line"><span class="comment">#单文件最大线程数, 路由建议值: 5</span></div><div class="line">split=10</div><div class="line"><span class="comment">#下载速度限制</span></div><div class="line">max-overall-download-limit=0</div><div class="line"><span class="comment">#单文件速度限制</span></div><div class="line">max-download-limit=0</div><div class="line"><span class="comment">#上传速度限制</span></div><div class="line">max-overall-upload-limit=0</div><div class="line"><span class="comment">#单文件速度限制</span></div><div class="line">max-upload-limit=0</div><div class="line"><span class="comment">#断开速度过慢的连接</span></div><div class="line"><span class="comment">#lowest-speed-limit=0</span></div><div class="line"><span class="comment">#验证用，需要1.16.1之后的release版本</span></div><div class="line"><span class="comment">#referer=*</span></div><div class="line"><span class="comment">#文件保存路径, 默认为当前启动位置</span></div><div class="line">dir=/Users/xxx/Downloads</div><div class="line"><span class="comment">#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本</span></div><div class="line"><span class="comment">#disk-cache=0</span></div><div class="line"><span class="comment">#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)</span></div><div class="line"><span class="comment">#enable-mmap=true</span></div><div class="line"><span class="comment">#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长</span></div><div class="line"><span class="comment">#所需时间 none &lt; falloc ? trunc « prealloc, falloc和trunc需要文件系统和内核支持</span></div><div class="line">file-allocation=prealloc</div></pre></td></tr></table></figure></p>
<p>修改默认下载路径：dir=下载路径，保存退出</p>
<p>3.启动aria2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aria2c --conf-path=<span class="string">"/Users/xxx/.aria2/aria2.conf"</span> -D</div></pre></td></tr></table></figure></p>
<p>4.下载浏览器百度云导出aria2插件<br><a href="https://github.com/acgotaku/BaiduExporter" target="_blank" rel="external">https://github.com/acgotaku/BaiduExporter</a><br>选择对应的浏览器安装插件，安装后打开百度云会发现多出一个导出下载按钮</p>
<p>直接在终端下载文件</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ESP8266-NodeMCU 使用相关]]></title>
      <url>http://www.hugospi.com/2016/09/30/ESP8266-use/</url>
      <content type="html"><![CDATA[<p>1.使用 NodeMCU 必须先安装 CP210x 驱动:<br><a href="https://www.silabs.com/products/mcu/Pages/USBtoUARTBridgeVCPDrivers.aspx" target="_blank" rel="external">https://www.silabs.com/products/mcu/Pages/USBtoUARTBridgeVCPDrivers.aspx</a></p>
<p>2.使用 esptool.py更新固件<br><a href="https://github.com/themadinventor/esptool" target="_blank" rel="external">https://github.com/themadinventor/esptool</a></p>
<p>固件下载地址：<a href="https://github.com/nodemcu/nodemcu-firmware/releases" target="_blank" rel="external">https://github.com/nodemcu/nodemcu-firmware/releases</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./esptool.py --port /dev/ttyUSB1 write_flash  bootloader.bin</div></pre></td></tr></table></figure>
<p>3.使用ESPlorer上传代码<br><a href="http://esp8266.ru/esplorer/" target="_blank" rel="external">http://esp8266.ru/esplorer/</a><br>使用ESPlorer前要先安装java，支持各大系统平台环境</p>
<p>启动ESPlorer设定通讯为9600 按下 Open 与 NodeMCU 连接</p>
<p>NodeMCU api说明：<a href="https://github.com/nodemcu/nodemcu-firmware/wiki/nodemcu_api_c" target="_blank" rel="external">https://github.com/nodemcu/nodemcu-firmware/wiki/nodemcu_api_c</a></p>
<p>init.lua这个文件就相当于以前我们DOS系统里的autoexec.bat文件和Linux系统中的rc.local文件，即开机运行的意思</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－接入DHT11温湿度传感器]]></title>
      <url>http://www.hugospi.com/2016/09/15/raspberry-DHT11/</url>
      <content type="html"><![CDATA[<p>利用DHT11温湿度传感器获取室内的温湿度，DHT11主要有三个引脚:VCC, DATA, GND<br>VCC:电源引脚3-5.5v<br>DATA:数据引脚<br>GND:接地引脚</p>
<p>树莓派3针脚说明：<a href="http://pinout.xyz/pinout/pin2_5v_power" target="_blank" rel="external">http://pinout.xyz/pinout/pin2_5v_power</a><br><a id="more"></a><br>引脚连接：<br>VCC连接3.3v 连接1或17口<br>DATA连接GPIO4第7口<br>GND连接14接地口</p>
<p>C代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  dht11.c:</div><div class="line"> *	Simple <span class="built_in">test</span> program to <span class="built_in">test</span> the wiringPi <span class="built_in">functions</span></div><div class="line"> *	DHT11 <span class="built_in">test</span></div><div class="line"> */</div><div class="line"> </div><div class="line"><span class="comment">#include &lt;wiringPi.h&gt;</span></div><div class="line"> </div><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdint.h&gt;</span></div><div class="line"><span class="comment">#define MAXTIMINGS	85</span></div><div class="line"><span class="comment">#define DHTPIN		7</span></div><div class="line">int dht11_dat[5] = &#123; 0, 0, 0, 0, 0 &#125;;</div><div class="line"> </div><div class="line">void <span class="function"><span class="title">read_dht11_dat</span></span>()</div><div class="line">&#123;</div><div class="line">	uint8_t laststate	= HIGH;</div><div class="line">	uint8_t counter		= 0;</div><div class="line">	uint8_t j		= 0, i;</div><div class="line">	<span class="built_in">float</span>	f; /* fahrenheit */</div><div class="line"> </div><div class="line">	dht11_dat[0] = dht11_dat[1] = dht11_dat[2] = dht11_dat[3] = dht11_dat[4] = 0;</div><div class="line"> </div><div class="line">	/* pull pin down <span class="keyword">for</span> 18 milliseconds */</div><div class="line">	pinMode( DHTPIN, OUTPUT );</div><div class="line">	digitalWrite( DHTPIN, LOW );</div><div class="line">	delay( 18 );</div><div class="line">	/* <span class="keyword">then</span> pull it up <span class="keyword">for</span> 40 microseconds */</div><div class="line">	digitalWrite( DHTPIN, HIGH );</div><div class="line">	delayMicroseconds( 40 );</div><div class="line">	/* prepare to <span class="built_in">read</span> the pin */</div><div class="line">	pinMode( DHTPIN, INPUT );</div><div class="line"> </div><div class="line">	/* detect change and <span class="built_in">read</span> data */</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; MAXTIMINGS; i++ )</div><div class="line">	&#123;</div><div class="line">		counter = 0;</div><div class="line">		<span class="keyword">while</span> ( digitalRead( DHTPIN ) == laststate )</div><div class="line">		&#123;</div><div class="line">			counter++;</div><div class="line">			delayMicroseconds( 1 );</div><div class="line">			<span class="keyword">if</span> ( counter == 255 )</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		laststate = digitalRead( DHTPIN );</div><div class="line"> </div><div class="line">		<span class="keyword">if</span> ( counter == 255 )</div><div class="line">			<span class="built_in">break</span>;</div><div class="line"> </div><div class="line">		/* ignore first 3 transitions */</div><div class="line">		<span class="keyword">if</span> ( (i &gt;= 4) &amp;&amp; (i % 2 == 0) )</div><div class="line">		&#123;</div><div class="line">			/* shove each bit into the storage bytes */</div><div class="line">			dht11_dat[j / 8] &lt;&lt;= 1;</div><div class="line">			<span class="keyword">if</span> ( counter &gt; 16 )</div><div class="line">				dht11_dat[j / 8] |= 1;</div><div class="line">			j++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"> </div><div class="line">	/*</div><div class="line">	 * check we <span class="built_in">read</span> 40 bits (8bit x 5 ) + verify checksum <span class="keyword">in</span> the last byte</div><div class="line">	 * <span class="built_in">print</span> it out <span class="keyword">if</span> data is good</div><div class="line">	 */</div><div class="line">	<span class="keyword">if</span> ( (j &gt;= 40) &amp;&amp;</div><div class="line">	     (dht11_dat[4] == ( (dht11_dat[0] + dht11_dat[1] + dht11_dat[2] + dht11_dat[3]) &amp; 0xFF) ) )</div><div class="line">	&#123;</div><div class="line">		f = dht11_dat[2] * 9. / 5. + 32;</div><div class="line">		<span class="built_in">printf</span>( <span class="string">"Humidity = %d.%d %% Temperature = %d.%d *C (%.1f *F)\n"</span>,</div><div class="line">			dht11_dat[0], dht11_dat[1], dht11_dat[2], dht11_dat[3], f );</div><div class="line">	&#125;<span class="keyword">else</span>  &#123;</div><div class="line">		<span class="built_in">printf</span>( <span class="string">"Data not good, skip\n"</span> );</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line">int main( void )</div><div class="line">&#123;</div><div class="line">	<span class="built_in">printf</span>( <span class="string">"Raspberry Pi wiringPi DHT11 Temperature test program\n"</span> );</div><div class="line"> </div><div class="line">	<span class="keyword">if</span> ( wiringPiSetup() == -1 )</div><div class="line">		<span class="built_in">exit</span>( 1 );</div><div class="line"> </div><div class="line">	<span class="keyword">while</span> ( 1 )</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">read</span>_dht11_dat();</div><div class="line">		delay( 1000 ); /* <span class="built_in">wait</span> 1sec to refresh */</div><div class="line">	&#125;</div><div class="line"> </div><div class="line">	<span class="built_in">return</span>(0);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gcc -o dht11 dht11.c -L/usr/<span class="built_in">local</span>/lib -lwiringPi </div><div class="line">sudo ./dht11</div></pre></td></tr></table></figure></p>
<p>感谢原作者;<a href="http://www.uugear.com/portfolio/dht11-humidity-temperature-sensor-module/" target="_blank" rel="external">http://www.uugear.com/portfolio/dht11-humidity-temperature-sensor-module/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－节假日闹钟]]></title>
      <url>http://www.hugospi.com/2016/08/18/raspberry-alarm-clock/</url>
      <content type="html"><![CDATA[<p>节假日闹钟，其实就是通过返回节假日数据定时播放音乐</p>
<p>1.注册帐号获取api认证信息<br>节假日数据api:<a href="https://www.showapi.com/api/lookPoint/894" target="_blank" rel="external">https://www.showapi.com/api/lookPoint/894</a></p>
<p>返回数据实例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"showapi_res_code"</span>: 0,</div><div class="line">    <span class="string">"showapi_res_error"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"showapi_res_body"</span>: &#123;</div><div class="line">        <span class="string">"begin"</span>: <span class="string">"20161001"</span>,</div><div class="line">        <span class="string">"cn"</span>: <span class="string">"周六"</span>,</div><div class="line">        <span class="string">"day"</span>: <span class="string">"20161001"</span>,</div><div class="line">        <span class="string">"en"</span>: <span class="string">"Saturday"</span>,</div><div class="line">        <span class="string">"end"</span>: <span class="string">"20161007"</span>,</div><div class="line">        <span class="string">"holiday"</span>: <span class="string">"国庆节"</span>,</div><div class="line">        <span class="string">"holiday_remark"</span>: <span class="string">"10月1日至7日放假调休，共7天。10月8日（星期六）、10月9日（星期日）上班。"</span>,</div><div class="line">        <span class="string">"ret_code"</span>: 0,</div><div class="line">        <span class="string">"type"</span>: <span class="string">"3"</span>,</div><div class="line">        <span class="string">"weekDay"</span>: 6</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>这里我只用到type字段</p>
<p>名称    类型    示例值       描述<br>day    String    20161001    查询的日期<br>weekDay    Number    6            星期几的数字<br>cn    String    周六            星期几的中文名<br>en    String    Saturday    星期几的英文名<br>holiday    String    国庆节            节日名称，工作日时显示“无”，周末时显示“周末”，节日时显示节日名称<br>holiday_remark    String      10月1日至7日放假调休，共7天。10月8日（星期六）、10月9日（星期日）上班。    节日备注<br>type    String    1            1为工作日，2为周末，3为节假日<br>begin    String    20161001    节日或周末开始时间，如果是工作日，此字段为空串<br>end    String    20161007    节日或周末结束时间，如果是工作日，此字段为空串</p>
<p>2.安装相关依赖</p>
<p>mpg123<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mpg123</div></pre></td></tr></table></figure></p>
<p>新建music文件夹存放音乐,音乐文件我用music1.mp3,music2.mp3格式命名，后面生成随机数随机播放音乐文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir music</div><div class="line">touch alarm-clock.py <span class="comment">#新建python文件</span></div></pre></td></tr></table></figure></p>
<p>python文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">import os</div><div class="line">import sys</div><div class="line">from subprocess import call</div><div class="line">from urllib import    request, parse</div><div class="line">import json</div><div class="line">import random</div><div class="line"></div><div class="line"><span class="comment">#节假日数据</span></div><div class="line">def jjrdate():</div><div class="line">    showapi_appid=<span class="string">"apiid"</span>  <span class="comment">#appid</span></div><div class="line">    showapi_sign=<span class="string">"api_sign"</span>   <span class="comment">#api_sign</span></div><div class="line">    url=<span class="string">"http://route.showapi.com/894-1"</span></div><div class="line">    send_data = parse.urlencode([</div><div class="line">    (<span class="string">'showapi_appid'</span>, showapi_appid)</div><div class="line">    ,(<span class="string">'showapi_sign'</span>, showapi_sign)</div><div class="line">     ,(<span class="string">'day'</span>, <span class="string">""</span>)</div><div class="line">     </div><div class="line">  ])</div><div class="line"> </div><div class="line">    req = request.Request(url)</div><div class="line">    with request.urlopen(req, data=send_data.encode(<span class="string">'utf-8'</span>)) as f:</div><div class="line">      str_res= f.read().decode(<span class="string">'utf-8'</span>)</div><div class="line">      svb_res=json.loads(str_res)</div><div class="line">      date=svb_res[<span class="string">"showapi_res_body"</span>]</div><div class="line">    <span class="built_in">return</span> date</div><div class="line"></div><div class="line"><span class="comment">#闹钟</span></div><div class="line">def aclock():</div><div class="line">        </div><div class="line">    jdate = jjrdate()</div><div class="line">    gzr = int(jdate[<span class="string">"type"</span>])</div><div class="line"></div><div class="line"><span class="comment">#判断是否工作日</span></div><div class="line">    <span class="keyword">if</span> gzr == 1:</div><div class="line">        <span class="built_in">return</span>_code = call(<span class="string">"/usr/bin/mpg123 ./music/music"</span> + str(random.randint(1,4)) + <span class="string">".mp3 "</span>, shell=True)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>: </div><div class="line">    aclock()</div></pre></td></tr></table></figure></p>
<p>git:<a href="https://github.com/HugoChanD/Raspberry-alarm-clock" target="_blank" rel="external">https://github.com/HugoChanD/Raspberry-alarm-clock</a></p>
<p>添加crontab 每天7:20执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">20 7 * * * sudo python3 /home/pi/python/alarm-clock.py</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－利用ngrok进行内网穿透]]></title>
      <url>http://www.hugospi.com/2016/08/17/raspberry-ngrok/</url>
      <content type="html"><![CDATA[<p>家里的小水管用的是联通的宽带，前些日子升级光纤之后发现ip地址变成了10.<em>.</em>.*，内网…<br>打电话给客服要求更换公网ip，估计是ipv4地址资源匮乏最终投诉无果，最后只能通过ngrok<br>进行内网穿透</p>
<p>ngrok项目地址：<a href="https://github.com/inconshreveable/ngrok" target="_blank" rel="external">https://github.com/inconshreveable/ngrok</a><br>可以自行编译搭建服务器，这里我直接使用搭建好的服务</p>
<p>国内服务器：<br>ngrok.cc<br>ittun.com<br>natapp.cn<br><a id="more"></a><br>我的树莓派不知道什么原因无法运行ngrok客户端，自行编译也不行，运行没有任何提示<br>无奈只能选择php客户端<br><a href="https://github.com/dosgo/ngrok-php" target="_blank" rel="external">https://github.com/dosgo/ngrok-php</a></p>
<p>修改服务器跟端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$seraddr</span> = <span class="string">'ittun.com'</span>; //ngrok服务器地址</div><div class="line"><span class="variable">$port</span> = 4443; //端口</div><div class="line"><span class="variable">$is_verify_peer</span> = <span class="literal">false</span>; //是否校验证书</div><div class="line">//你要映射到通道</div><div class="line"><span class="variable">$Tunnels</span> = array(</div><div class="line">    array(</div><div class="line">        <span class="string">'protocol'</span> =&gt; <span class="string">'http'</span>,</div><div class="line">        <span class="string">'hostname'</span> =&gt; <span class="string">'www.xxx.com'</span>,</div><div class="line">        <span class="string">'subdomain'</span> =&gt; <span class="string">''</span>,</div><div class="line">        <span class="string">'rport'</span> =&gt; 0,</div><div class="line">        <span class="string">'lhost'</span> =&gt; <span class="string">'127.0.0.1'</span>,</div><div class="line">        <span class="string">'lport'</span> =&gt; 80</div><div class="line">    ),</div><div class="line">    array(</div><div class="line">        <span class="string">'protocol'</span> =&gt; <span class="string">'http'</span>,</div><div class="line">        <span class="string">'hostname'</span> =&gt; <span class="string">''</span>,</div><div class="line">        <span class="string">'subdomain'</span> =&gt; <span class="string">'xxx'</span>,</div><div class="line">        <span class="string">'rport'</span> =&gt; 0,</div><div class="line">        <span class="string">'lhost'</span> =&gt; <span class="string">'127.0.0.1'</span>,</div><div class="line">        <span class="string">'lport'</span> =&gt; 80</div><div class="line">    ),</div><div class="line">    array(</div><div class="line">        <span class="string">'protocol'</span> =&gt; <span class="string">'tcp'</span>,</div><div class="line">        <span class="string">'hostname'</span> =&gt; <span class="string">''</span>,</div><div class="line">        <span class="string">'subdomain'</span> =&gt; <span class="string">''</span>,</div><div class="line">        <span class="string">'rport'</span> =&gt; 57715,</div><div class="line">        <span class="string">'lhost'</span> =&gt; <span class="string">'127.0.0.1'</span>,</div><div class="line">        <span class="string">'lport'</span> =&gt; 22</div><div class="line">    ),</div><div class="line">);</div></pre></td></tr></table></figure></p>
<p>直接运行就可以</p>
<p>可以添加计划shell脚本检测是否运行ngrok客户端</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－利用owncloud搭建个人私有云]]></title>
      <url>http://www.hugospi.com/2016/07/29/raspberry-owncloud/</url>
      <content type="html"><![CDATA[<p>owncloud：简单来说就是一个基于PHP的网盘</p>
<p>需要的依赖：<br>MySQL数据库、php、数据库驱动、apache2、curl</p>
<p>1.安装依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install apache2 php5 php5-gd php-xml-parser php5-intl php5-sqlite php5-mysql smbclient curl libcurl3 php5-curl mysql-server</div></pre></td></tr></table></figure></p>
<p>安装过程中会提示你设置数据库密码，自己设置就可以了<br><a id="more"></a><br>2.下载安装owncloud<br>url：<a href="https://owncloud.org/install/" target="_blank" rel="external">https://owncloud.org/install/</a><br>我安装的是9.1版本</p>
<p>配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /var/www/html    <span class="comment">#进去网页目录</span></div><div class="line">tar jxvf owncloud-9.1.0.tar.bz2 -C  /var/www/html <span class="comment">#解压</span></div><div class="line"><span class="built_in">cd</span> /var/www/html/owncloud</div><div class="line">sudo mkdir data</div><div class="line"></div><div class="line"><span class="comment">#设置权限：</span></div><div class="line">sudo chown -R www-data:www-data data </div><div class="line">sudo chown -R www-data:www-data config </div><div class="line">sudo chown -R www-data:www-data apps</div></pre></td></tr></table></figure></p>
<p>修改配置/etc/apache2/apache2.conf  （备份）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#修改之后：</span></div><div class="line">&lt;Directory /var/www/&gt;</div><div class="line">        Options Indexes FollowSymLinks</div><div class="line">        AllowOverride All</div><div class="line">        Require all granted</div><div class="line">&lt;/Directory&gt;</div></pre></td></tr></table></figure></p>
<p>重新启动下apache<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service apache2 restart</div></pre></td></tr></table></figure></p>
<p>访问<a href="http://树莓派ip/owncloud" target="_blank" rel="external">http://树莓派ip/owncloud</a>  </p>
<p>可以下载对应的owncloud进行云盘管理，在手机上也很方便</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－用shairport-sync搭建airplay播放器]]></title>
      <url>http://www.hugospi.com/2016/07/27/raspberry-airplay/</url>
      <content type="html"><![CDATA[<p>shairport-sync<br>代码地址：<a href="https://github.com/mikebrady/shairport-sync" target="_blank" rel="external">https://github.com/mikebrady/shairport-sync</a></p>
<p>照着作者说明步骤弄就可以了</p>
<p>1.首先安装依赖软件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install build-essential git</div><div class="line">sudo apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</div><div class="line">sudo apt-get install avahi-daemon libavahi-client-dev</div><div class="line">sudo apt-get install apt-get install libssl-dev</div><div class="line">sudo apt-get install libpolarssl-dev</div><div class="line">sudo apt-get install libsoxr-dev</div></pre></td></tr></table></figure></p>
<p>这里我安装libasound2-dev 的时候提示依赖有问题，本文最后会说到<br><a id="more"></a><br>2.下载编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/mikebrady/shairport-sync.git</div><div class="line"><span class="built_in">cd</span> shairport-sync</div><div class="line">autoreconf -i <span class="_">-f</span></div><div class="line">sudo ./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd --with-systemdsystemunitdir=/lib/systemd/system</div><div class="line"></div><div class="line">make</div><div class="line">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class="line"></div><div class="line">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class="_">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div><div class="line"></div><div class="line">sudo make install</div><div class="line">sudo systemctl <span class="built_in">enable</span> shairport-sync</div><div class="line">sudo make install</div><div class="line">sudo cp scripts/shairport-sync /etc/init.d/</div><div class="line">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>
<p>3.自定义<br>/etc/shairport-sync.conf  (备份备份)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">general =</div><div class="line">&#123;</div><div class="line">    name = <span class="string">"Front Room"</span>;  <span class="comment">#设备名称</span></div><div class="line">    password = <span class="string">"secret"</span>;</div><div class="line">    interpolation = <span class="string">"soxr"</span>;</div><div class="line">    // ... other general settings</div><div class="line">&#125;;</div><div class="line"></div><div class="line">alsa =</div><div class="line">&#123;</div><div class="line">  output_device = <span class="string">"hw:0,5"</span>;  <span class="comment">#输出设备编号</span></div><div class="line">  mixer_device = <span class="string">"hw:0"</span>;</div><div class="line">  mixer_control_name = <span class="string">"PCM"</span>; ＃音量控制器名称</div><div class="line">  // ... other alsa settings</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>其它参数直接看作者说明</p>
<p>4.启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/shairport-sync start</div></pre></td></tr></table></figure></p>
<p>安装libasound2-dev出现的问题：<br> 安装的时候说想要libasound2，直接apt-get安装又没有，只能重新安装libasound2<br>sudo apt-get remove libasound2  之后又提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The following packages have unmet dependencies:</div><div class="line"> openjdk-7-jdk : Depends: openjdk-7-jre (= 7u101-2.6.6-2~deb8u1+rpi1) but it is not going to be installed</div><div class="line">E: Error, pkgProblemResolver::Resolve generated breaks, this may be caused by held packages.</div></pre></td></tr></table></figure></p>
<p>最终安装相关依赖解决<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openjdk-7-jdk openjdk-7-jre </div><div class="line">sudo apt-get install openjdk-8-jdk openjdk-8-jre </div><div class="line">sudo apt-get remove libasound2 </div><div class="line">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－切换usb声卡]]></title>
      <url>http://www.hugospi.com/2016/07/27/raspberry-auto/</url>
      <content type="html"><![CDATA[<p>树莓派自带的3.5声音接口电流声感人，淘宝买了一个usb免驱声卡</p>
<p>这里纪录下raspbian 4.4系统切换声卡的方法</p>
<p>查看声卡：cat /proc/asound/cards<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">0 [ALSA           ]: bcm2835 - bcm2835 ALSA</div><div class="line">                     bcm2835 ALSA</div><div class="line">1 [Device         ]: USB-Audio - USB PnP Sound Device</div><div class="line">                     C-Media Electronics Inc. USB PnP Sound Device at usb-3f980000.usb-1.5.3, full s</div></pre></td></tr></table></figure></p>
<p>可以看到两张声卡，usb-Audio就是usb声卡 </p>
<p>编辑家目录下的 .asoundrc文件，将0改为1，修改后如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">pcm.!default &#123;</div><div class="line">         <span class="built_in">type</span> hw</div><div class="line">         card 1</div><div class="line"> &#125; </div><div class="line"> ctl.!default &#123;</div><div class="line">         <span class="built_in">type</span> hw</div><div class="line">         card 1</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>创建配置文件：/etc/asound.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">pcm.!default &#123;</div><div class="line">    <span class="built_in">type</span> hw</div><div class="line">    card 1</div><div class="line">&#125;</div><div class="line"></div><div class="line">ctl.!default &#123;</div><div class="line">    <span class="built_in">type</span> hw</div><div class="line">    card 1</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>通过alsamixer命令可以调节音量`</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－搭建家庭nas服务]]></title>
      <url>http://www.hugospi.com/2016/07/27/raspberry-samba/</url>
      <content type="html"><![CDATA[<p>1.准备硬盘<br>ps:（硬盘最好用带电源的hub连接，不然树莓派有可能会…）<br>这里选择将硬盘格式化为ext4<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#查看硬盘</span></div><div class="line">sudo fdisk <span class="_">-l</span></div><div class="line"><span class="comment">#卸载硬盘</span></div><div class="line">sudo umount /dev/sda1</div><div class="line"><span class="comment">#格式化</span></div><div class="line">sudo mkfs.ext4 /dev/sda1</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>2.挂载硬盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#新建挂载目录</span></div><div class="line">mkdir /home/pi/NAS</div><div class="line"><span class="comment">#挂载硬盘</span></div><div class="line">sudo mount /dev/sda1 /home/pi/NAS</div><div class="line"><span class="comment">#设置权限</span></div><div class="line">sudo chown pi:pi /home/pi/NAS</div></pre></td></tr></table></figure></p>
<p>3.安装配置samba<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install samba samba-common-bin</div></pre></td></tr></table></figure></p>
<p>编辑配置文件 sudo vi /etc/samba/smb.conf  (备份文件是个好习惯)<br>添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[share]</div><div class="line">    path = /home/pi/NAS  <span class="comment">#共享路径</span></div><div class="line">    browseable = yes</div><div class="line">    writable = yes</div><div class="line">    create mask = 0664  <span class="comment">#新建文件权限</span></div><div class="line">    directory mask = 0775  <span class="comment">#新建目录权限</span></div></pre></td></tr></table></figure></p>
<p>设置共享用户密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo smbpasswd <span class="_">-a</span> pi</div></pre></td></tr></table></figure></p>
<p>输入密码<br>重新启动samba服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/samba restart</div></pre></td></tr></table></figure></p>
<p>访问方法：<br>windows用户按win＋r调出窗口输入 \\树莓派ip<br>mac用户连接服务器 smb://树莓派ip</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－配置使用国内就像软件源更新]]></title>
      <url>http://www.hugospi.com/2016/07/27/raspberry-update/</url>
      <content type="html"><![CDATA[<p>环境：树莓派3 系统raspbian jessie版</p>
<p>修改更新源文件，修改之前记得备份文件<br>1.修改 sources.list<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/apt/sources.list</div></pre></td></tr></table></figure></p>
<p>删除原来的所有内容替换为国内源，这里使用的是浙江大学<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.zju.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi</div><div class="line">deb-src http://mirrors.zju.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi</div></pre></td></tr></table></figure></p>
<p>2.修改/etc/apt/sources.list.d/raspi.list 清华大学的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib</div></pre></td></tr></table></figure></p>
<p>最后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure></p>
<p>更多镜像源:<a href="http://www.raspbian.org/RaspbianMirrors" target="_blank" rel="external">http://www.raspbian.org/RaspbianMirrors</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－编译安装新版本的python]]></title>
      <url>http://www.hugospi.com/2016/07/27/raspberry-python/</url>
      <content type="html"><![CDATA[<p>我的树莓派上面预装的python版本是3.4.2,官网最新版本为3.6<br>url：<a href="https://www.python.org/ftp/python/3.6.0/Python-3.6.0a3.tgz" target="_blank" rel="external">https://www.python.org/ftp/python/3.6.0/Python-3.6.0a3.tgz</a></p>
<p>1.安装python 需要的依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev libssl-dev openssl libgdbm-dev liblzma-dev libreadline-dev libncursesw5-dev</div></pre></td></tr></table></figure></p>
<p>2.下载解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0a3.tgz </div><div class="line">tar zxvf Python-3.6.0a3.tgz</div></pre></td></tr></table></figure></p>
<p>3.编译安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ./Python-3.6.0a3</div><div class="line">./configure --prefix=/opt/python3.6</div><div class="line">make</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure></p>
<p>创建软链接,创建之后，打python3就能启动python 3.6了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo rm /usr/bin/python3</div><div class="line">sudo ln <span class="_">-s</span> /opt/python3.6/bin/python3.6   /usr/bin/python3</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－替换更新raspbian系统vim]]></title>
      <url>http://www.hugospi.com/2016/07/27/raspberryvim/</url>
      <content type="html"><![CDATA[<p>树莓派自带的vi编辑器太难用了，下面纪录更新raspbian系统vi的更新</p>
<p>1.删除系统原来的vi编辑器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get remove vim-common</div></pre></td></tr></table></figure></p>
<p>2.安装新的vi<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install vim</div></pre></td></tr></table></figure></p>
<p>3.自定义vi<br>编辑/etc/vim/vimrc文件，添加以下内容</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#显示行号</span></div><div class="line"><span class="built_in">set</span> nu</div><div class="line"><span class="comment">#语法高亮</span></div><div class="line">syntax on </div><div class="line"><span class="comment">#tab 退四格</span></div><div class="line"><span class="built_in">set</span> tabstop=4</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－mac系统下安装raspbian系统到sd卡]]></title>
      <url>http://www.hugospi.com/2016/07/26/raspberry-mac/</url>
      <content type="html"><![CDATA[<p>1.首先官网下载系统<br>url：<a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="external">https://www.raspberrypi.org/downloads/raspbian/</a></p>
<p>插入sd卡，查看挂载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df -h</div></pre></td></tr></table></figure></p>
<p>SD设备文件为：/dev/disk2s1<br>使用diskutil unmount卸载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">diskutil unmount /dev/disk2s1</div></pre></td></tr></table></figure></p>
<p>2.安装系统<br>使用dd命令将系统镜像写入<br>PS /dev/disk2s1是分区，/dev/disk2是块设备，/dev/rdisk2是原始字符设备<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#首先进入镜像目录或直接下路径</span></div><div class="line">dd bs=4m <span class="keyword">if</span>=pi.img of=/dev/rdisk2</div></pre></td></tr></table></figure></p>
<p>至此，SD卡上已经刷入了 Raspbian 系统</p>
<p>再用diskutil unmountDisk卸载设备<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">diskutil unmountDisk /dev/disk2</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－树莓派sd卡系统备份还原]]></title>
      <url>http://www.hugospi.com/2016/07/23/raspberrybak/</url>
      <content type="html"><![CDATA[<p>出于对sd卡的不信任，指不定哪一天sd卡突然死掉，所以这里记录下树莓派系统的办法<br>方法一：<br>脚本地址：<a href="https://www.raspberrypi.org/forums/viewtopic.php?p=635962#p635962" target="_blank" rel="external">https://www.raspberrypi.org/forums/viewtopic.php?p=635962#p635962</a>  版权归原作者所有</p>
<p>可配合crontab定时备份系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo touch bkup_rpimage.sh</div><div class="line">sudo nano bkup_rpimage.sh</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>脚本:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"># bkup_rpimage.sh by jinx</div><div class="line">#</div><div class="line"># Utility script to backup Raspberry Pi&apos;s SD Card to a sparse image file</div><div class="line"># mounted as a filesystem in a file, allowing for efficient incremental</div><div class="line"># backups using rsync</div><div class="line"></div><div class="line">VERSION=v1.0</div><div class="line">SDCARD=/dev/mmcblk0</div><div class="line"></div><div class="line"># Echos traces with yellow text to distinguish from other output</div><div class="line">trace () &#123;</div><div class="line">    echo -e &quot;$(tput setaf 3)$&#123;1&#125;$(tput sgr 0)&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Echos en error string in red text and exit</div><div class="line">error () &#123;</div><div class="line">    echo -e &quot;$(tput setaf 1)$&#123;1&#125;$(tput sgr 0)&quot; &gt;&amp;2</div><div class="line">    exit 1</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Creates a sparse $IMAGE clone of $SDCARD and attaches to $LOOPBACK</div><div class="line">    do_create () &#123;</div><div class="line">        trace &quot;Creating sparse $IMAGE, the apparent size of $SDCARD&quot;</div><div class="line">        dd if=/dev/zero of=$IMAGE bs=$(blockdev --getss $SDCARD) count=0 seek=$(blockdev --getsz $SDCARD)</div><div class="line"></div><div class="line">    if [ -s $IMAGE ]; then</div><div class="line">            trace &quot;Attaching $IMAGE to $LOOPBACK&quot;</div><div class="line">            losetup $LOOPBACK $IMAGE</div><div class="line">        else</div><div class="line">            error &quot;$IMAGE was not created or has zero size&quot;</div><div class="line">    fi</div><div class="line"></div><div class="line">    trace &quot;Copying partition table from $SDCARD to $LOOPBACK&quot;</div><div class="line">    parted -s $LOOPBACK mklabel msdos</div><div class="line">        sfdisk --dump $SDCARD | sfdisk --force $LOOPBACK</div><div class="line"></div><div class="line">    trace &quot;Formatting partitions&quot;</div><div class="line">    partx --add $LOOPBACK</div><div class="line">        mkfs.vfat -I $LOOPBACK1</div><div class="line">    mkfs.ext4 $LOOPBACK2</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Mounts the $IMAGE to $LOOPBACK (if needed) and $MOUNTDIR</div><div class="line">    do_mount () &#123;</div><div class="line">        # Check if do_create already attached the SD Image</div><div class="line">        if [ $(losetup -f) = $LOOPBACK ]; then</div><div class="line">            trace &quot;Attaching $IMAGE to $LOOPBACK&quot;</div><div class="line">            losetup $LOOPBACK $IMAGE</div><div class="line">            partx --add $LOOPBACK</div><div class="line">    fi</div><div class="line"></div><div class="line">    trace &quot;Mounting $LOOPBACK1 and $LOOPBACK2 to $MOUNTDIR&quot;</div><div class="line">        if [ ! -n &quot;$opt_mountdir&quot; ]; then</div><div class="line">        mkdir $MOUNTDIR</div><div class="line">        fi</div><div class="line">        mount $LOOPBACK2 $MOUNTDIR</div><div class="line">        mkdir -p $MOUNTDIR/boot</div><div class="line">    mount $LOOPBACK1 $MOUNTDIR/boot</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Rsyncs content of $SDCARD to $IMAGE if properly mounted</div><div class="line">do_backup () &#123;</div><div class="line">    if mountpoint -q $MOUNTDIR; then</div><div class="line">            trace &quot;Starting rsync backup of / and /boot/ to $MOUNTDIR&quot;</div><div class="line">        if [ -n &quot;$opt_log&quot; ]; then</div><div class="line">                rsync -aEvx --del --stats --log-file $LOG /boot/ $MOUNTDIR/boot/</div><div class="line">                rsync -aEvx --del --stats --log-file $LOG / $MOUNTDIR/</div><div class="line">            else</div><div class="line">                rsync -aEvx --del --stats /boot/ $MOUNTDIR/boot/</div><div class="line">            rsync -aEvx --del --stats / $MOUNTDIR/</div><div class="line">            fi</div><div class="line">        else</div><div class="line">            trace &quot;Skipping rsync since $MOUNTDIR is not a mount point&quot;</div><div class="line">    fi</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Unmounts the $IMAGE from $MOUNTDIR and $LOOPBACK</div><div class="line">do_umount () &#123;</div><div class="line">    trace &quot;Flushing to disk&quot;</div><div class="line">    sync; sync</div><div class="line"></div><div class="line">    trace &quot;Unmounting $LOOPBACK1 and $LOOPBACK2 from $MOUNTDIR&quot;</div><div class="line">        umount $MOUNTDIR/boot</div><div class="line">    umount $MOUNTDIR</div><div class="line">        if [ ! -n &quot;$opt_mountdir&quot; ]; then</div><div class="line">        rmdir $MOUNTDIR</div><div class="line">    fi</div><div class="line"></div><div class="line">    trace &quot;Detaching $IMAGE from $LOOPBACK&quot;</div><div class="line">    partx --delete $LOOPBACK</div><div class="line">        losetup -d $LOOPBACK</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Compresses $IMAGE to $IMAGE.gz using a temp file during compression</div><div class="line">do_compress () &#123;</div><div class="line">    trace &quot;Compressing $IMAGE to $&#123;IMAGE&#125;.gz&quot;</div><div class="line">    pv -tpreb $IMAGE | gzip &gt; $&#123;IMAGE&#125;.gz.tmp</div><div class="line">    if [ -s $&#123;IMAGE&#125;.gz.tmp ]; then</div><div class="line">            mv -f $&#123;IMAGE&#125;.gz.tmp $&#123;IMAGE&#125;.gz</div><div class="line">            if [ -n &quot;$opt_delete&quot; ]; then</div><div class="line">            rm -f $IMAGE</div><div class="line">        fi</div><div class="line">    fi</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Tries to cleanup after Ctrl-C interrupt</div><div class="line">ctrl_c () &#123;</div><div class="line">    trace &quot;Ctrl-C detected.&quot;</div><div class="line"></div><div class="line">    if [ -s $&#123;IMAGE&#125;.gz.tmp ]; then</div><div class="line">            rm $&#123;IMAGE&#125;.gz.tmp</div><div class="line">    else</div><div class="line">        do_umount</div><div class="line">    fi</div><div class="line"></div><div class="line">    if [ -n &quot;$opt_log&quot; ]; then</div><div class="line">            trace &quot;See rsync log in $LOG&quot;</div><div class="line">    fi</div><div class="line"></div><div class="line">    error &quot;SD Image backup process interrupted&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Prints usage information</div><div class="line">usage () &#123;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;$(basename $0) $VERSION by jinx&quot;</div><div class="line">        echo -e &quot;&quot;</div><div class="line">        echo -e &quot;Usage:&quot;</div><div class="line">        echo -e &quot;&quot;</div><div class="line">        echo -e &quot;    $(basename $0) $(tput bold)start$(tput sgr 0) [-clzdf] [-L logfile] [-i sdcard] sdimage&quot;</div><div class="line">        echo -e &quot;    $(basename $0) $(tput bold)mount$(tput sgr 0) [-c] sdimage [mountdir]&quot;</div><div class="line">        echo -e &quot;    $(basename $0) $(tput bold)umount$(tput sgr 0) sdimage [mountdir]&quot;</div><div class="line">        echo -e &quot;    $(basename $0) $(tput bold)gzip$(tput sgr 0) [-df] sdimage&quot;</div><div class="line">        echo -e &quot;&quot;</div><div class="line">        echo -e &quot;    Commands:&quot;</div><div class="line">        echo -e &quot;&quot;</div><div class="line">        echo -e &quot;        $(tput bold)start$(tput sgr 0)  starts complete backup of RPi&apos;s SD Card to &apos;sdimage&apos;&quot;</div><div class="line">        echo -e &quot;        $(tput bold)mount$(tput sgr 0)  mounts the &apos;sdimage&apos; to &apos;mountdir&apos; (default: /mnt/&apos;sdimage&apos;/)&quot;</div><div class="line">        echo -e &quot;        $(tput bold)umount$(tput sgr 0) unmounts the &apos;sdimage&apos; from &apos;mountdir&apos;&quot;</div><div class="line">        echo -e &quot;        $(tput bold)gzip$(tput sgr 0)   compresses the &apos;sdimage&apos; to &apos;sdimage&apos;.gz&quot;</div><div class="line">        echo -e &quot;&quot;</div><div class="line">        echo -e &quot;    Options:&quot;</div><div class="line">        echo -e &quot;&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-c$(tput sgr 0)         creates the SD Image if it does not exist&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-l$(tput sgr 0)         writes rsync log to &apos;sdimage&apos;-YYYYmmddHHMMSS.log&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-z$(tput sgr 0)         compresses the SD Image (after backup) to &apos;sdimage&apos;.gz&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-d$(tput sgr 0)         deletes the SD Image after successful compression&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-f$(tput sgr 0)         forces overwrite of &apos;sdimage&apos;.gz if it exists&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-L logfile$(tput sgr 0) writes rsync log to &apos;logfile&apos;&quot;</div><div class="line">        echo -e &quot;        $(tput bold)-i sdcard$(tput sgr 0)  specifies the SD Card location (default: $SDCARD)&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;Examples:&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;    $(basename $0) rsync -c /path/to/rpi_backup.img&quot;</div><div class="line">    echo -e &quot;        starts backup to &apos;rpi_backup.img&apos;, creating it if it does not exist&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;    $(basename $0) rsync /path/to/\$(uname -n).img&quot;</div><div class="line">    echo -e &quot;        uses the RPi&apos;s hostname as the SD Image filename&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;    $(basename $0) rsync -cz /path/to/\$(uname -n)-\$(date +%Y-%m-%d).img&quot;</div><div class="line">    echo -e &quot;        uses the RPi&apos;s hostname and today&apos;s date as the SD Image filename,&quot;</div><div class="line">    echo -e &quot;        creating it if it does not exist, and compressing it after backup&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;    $(basename $0) mount /path/to/\$(uname -n).img /mnt/rpi_image&quot;</div><div class="line">    echo -e &quot;        mounts the RPi&apos;s SD Image in /mnt/rpi_image&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">    echo -e &quot;    $(basename $0) umount /path/to/raspi-$(date +%Y-%m-%d).img&quot;</div><div class="line">        echo -e &quot;        unmounts the SD Image from default mountdir (/mnt/raspi-$(date +%Y-%m-%d).img/)&quot;</div><div class="line">    echo -e &quot;&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Read the command from command line</div><div class="line">case $1 in</div><div class="line">        start|mount|umount|gzip)</div><div class="line">            opt_command=$1</div><div class="line">        ;;</div><div class="line">    -h|--help)</div><div class="line">        usage</div><div class="line">        exit 0</div><div class="line">        ;;</div><div class="line">    --version)</div><div class="line">        trace &quot;$(basename $0) $VERSION by jinx&quot;</div><div class="line">            exit 0</div><div class="line">            ;;</div><div class="line">        *)</div><div class="line">            error &quot;Invalid command or option: $1\nSee &apos;$(basename $0) --help&apos; for usage&quot;;;</div><div class="line">esac</div><div class="line">shift 1</div><div class="line"></div><div class="line"># Make sure we have root rights</div><div class="line">if [ $(id -u) -ne 0 ]; then</div><div class="line">    error &quot;Please run as root. Try sudo.&quot;</div><div class="line">fi</div><div class="line"></div><div class="line"># Read the options from command line</div><div class="line">while getopts &quot;:czdflL:i:&quot; opt; do</div><div class="line">    case $opt in</div><div class="line">            c)  opt_create=1;;</div><div class="line">            z)  opt_compress=1;;</div><div class="line">            d)  opt_delete=1;;</div><div class="line">            f)  opt_force=1;;</div><div class="line">            l)  opt_log=1;;</div><div class="line">            L)  opt_log=1</div><div class="line">                LOG=$OPTARG</div><div class="line">            ;;</div><div class="line">        i)  SDCARD=$OPTARG;;</div><div class="line">            \?) error &quot;Invalid option: -$OPTARG\nSee &apos;$(basename $0) --help&apos; for usage&quot;;;</div><div class="line">        :)  error &quot;Option -$OPTARG requires an argument\nSee &apos;$(basename $0) --help&apos; for usage&quot;;;</div><div class="line">        esac</div><div class="line">    done</div><div class="line">    shift $((OPTIND-1))</div><div class="line"></div><div class="line"># Read the sdimage path from command line</div><div class="line">IMAGE=$1</div><div class="line">    if [ -z $IMAGE ]; then</div><div class="line">    error &quot;No sdimage specified&quot;</div><div class="line">fi</div><div class="line"></div><div class="line"># Check if sdimage exists</div><div class="line">if [ $opt_command = umount ] || [ $opt_command = gzip ]; then</div><div class="line">    if [ ! -f $IMAGE ]; then</div><div class="line">            error &quot;$IMAGE does not exist&quot;</div><div class="line">    fi</div><div class="line">else</div><div class="line">    if [ ! -f $IMAGE ] &amp;&amp; [ ! -n &quot;$opt_create&quot; ]; then</div><div class="line">        error &quot;$IMAGE does not exist\nUse -c to allow creation&quot;</div><div class="line">    fi</div><div class="line">fi</div><div class="line"></div><div class="line"># Check if we should compress and sdimage.gz exists</div><div class="line">if [ -n &quot;$opt_compress&quot; ] || [ $opt_command = gzip ]; then</div><div class="line">    if [ -s $&#123;IMAGE&#125;.gz ] &amp;&amp; [ ! -n &quot;$opt_force&quot; ]; then</div><div class="line">        error &quot;$&#123;IMAGE&#125;.gz already exists\nUse -f to force overwriting&quot;</div><div class="line">    fi</div><div class="line">fi</div><div class="line"></div><div class="line"># Define default rsync logfile if not defined</div><div class="line">if [ -z $LOG ]; then</div><div class="line">        LOG=$&#123;IMAGE&#125;-$(date +%Y%m%d%H%M%S).log</div><div class="line">fi</div><div class="line"></div><div class="line"># Identify which loopback device to use</div><div class="line">LOOPBACK=$(losetup -j $IMAGE | grep -o ^[^:]*)</div><div class="line">if [ $opt_command = umount ]; then</div><div class="line">        if [ -z $LOOPBACK ]; then</div><div class="line">        error &quot;No /dev/loop&lt;X&gt; attached to $IMAGE&quot;</div><div class="line">        fi</div><div class="line">    elif [ ! -z $LOOPBACK ]; then</div><div class="line">    error &quot;$IMAGE already attached to $LOOPBACK mounted on $(grep $&#123;LOOPBACK&#125;p2 /etc/mtab | cut -d &apos; &apos; -f 2)/&quot;</div><div class="line">else</div><div class="line">    LOOPBACK=$(losetup -f)</div><div class="line">    fi</div><div class="line">    LOOPBACK1=$&#123;LOOPBACK&#125;p1</div><div class="line">LOOPBACK2=$&#123;LOOPBACK&#125;p2</div><div class="line"></div><div class="line"># Read the optional mountdir from command line</div><div class="line">MOUNTDIR=$2</div><div class="line">    if [ -z $MOUNTDIR ]; then</div><div class="line">    MOUNTDIR=/mnt/$(basename $IMAGE)/</div><div class="line">else</div><div class="line">    opt_mountdir=1</div><div class="line">    if [ ! -d $MOUNTDIR ]; then</div><div class="line">            error &quot;Mount point $MOUNTDIR does not exist&quot;</div><div class="line">    fi</div><div class="line">fi</div><div class="line"></div><div class="line"># Check if default mount point exists</div><div class="line">if [ $opt_command = umount ]; then</div><div class="line">        if [ ! -d $MOUNTDIR ]; then</div><div class="line">        error &quot;Default mount point $MOUNTDIR does not exist&quot;</div><div class="line">        fi</div><div class="line">    else</div><div class="line">        if [ ! -n &quot;$opt_mountdir&quot; ] &amp;&amp; [ -d $MOUNTDIR ]; then</div><div class="line">            error &quot;Default mount point $MOUNTDIR already exists&quot;</div><div class="line">    fi</div><div class="line">fi</div><div class="line"></div><div class="line"># Trap keyboard interrupt (ctrl-c)</div><div class="line">trap ctrl_c SIGINT</div><div class="line"></div><div class="line"># Check for dependencies</div><div class="line">for c in dd losetup parted sfdisk partx mkfs.vfat mkfs.ext4 mountpoint rsync; do</div><div class="line">    command -v $c &gt;/dev/null 2&gt;&amp;1 || error &quot;Required program $c is not installed&quot;</div><div class="line">done</div><div class="line">if [ -n &quot;$opt_compress&quot; ] || [ $opt_command = gzip ]; then</div><div class="line">    for c in pv gzip; do</div><div class="line">        command -v $c &gt;/dev/null 2&gt;&amp;1 || error &quot;Required program $c is not installed&quot;</div><div class="line">    done</div><div class="line">fi</div><div class="line"></div><div class="line"># Do the requested functionality</div><div class="line">case $opt_command in</div><div class="line">        start)</div><div class="line">                trace &quot;Starting SD Image backup process&quot;</div><div class="line">                if [ ! -f $IMAGE ] &amp;&amp; [ -n &quot;$opt_create&quot; ]; then</div><div class="line">                    do_create</div><div class="line">                fi</div><div class="line">                do_mount</div><div class="line">                do_backup</div><div class="line">                do_umount</div><div class="line">                if [ -n &quot;$opt_compress&quot; ]; then</div><div class="line">                do_compress</div><div class="line">            fi</div><div class="line">            trace &quot;SD Image backup process completed.&quot;</div><div class="line">            if [ -n &quot;$opt_log&quot; ]; then</div><div class="line">                    trace &quot;See rsync log in $LOG&quot;</div><div class="line">            fi</div><div class="line">            ;;</div><div class="line">    mount)</div><div class="line">            if [ ! -f $IMAGE ] &amp;&amp; [ -n &quot;$opt_create&quot; ]; then</div><div class="line">                do_create</div><div class="line">            fi</div><div class="line">            do_mount</div><div class="line">            trace &quot;SD Image has been mounted and can be accessed at:\n    $MOUNTDIR&quot;</div><div class="line">                ;;</div><div class="line">        umount)</div><div class="line">                do_umount</div><div class="line">                ;;</div><div class="line">        gzip)</div><div class="line">                do_compress</div><div class="line">                ;;</div><div class="line">        *)</div><div class="line">                error &quot;Unknown command: $opt_command&quot;</div><div class="line">            ;;</div><div class="line">esac</div><div class="line"></div><div class="line">exit 0</div></pre></td></tr></table></figure><br>命令示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sh bkup_rpimage.sh start -cz /home/pi/NAS/$(uname -n)-$(date +%Y-%m-%d).img</div></pre></td></tr></table></figure></p>
<p>/home/pi/NAS 为备份位置，按需求修改位置，-c为新建备份， -z为启用压缩，会生成img.gz压缩文件，节约空间，其它选项可参看脚本</p>
<p>方法二：<br>环境：<br>采用dd方式将系统备份到移动硬盘，硬盘已挂载到/home/pi/NAS</p>
<p>1.需要用到的软件<br>dump：dump &amp; restore 备份工具<br>parted &amp; kpartx：虚拟磁盘工具<br><!--more--><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install dump</div><div class="line">sudo apt-get install parted</div><div class="line">sudo apt-get install  kpartx</div></pre></td></tr></table></figure></p>
<p>2.生成一个空白的img文件<br>首先查看系统占用大小<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df -h</div></pre></td></tr></table></figure></p>
<p>生成一个生成块大小为 1MB 总大小为 4000MB 的镜像文件存放到移动硬盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dd <span class="keyword">if</span>=/dev/zero of=/home/pi/NAS/pi.img bs=1MB count=4000</div></pre></td></tr></table></figure></p>
<p>这会花费一定的时间，具体看硬件的速度</p>
<p>3.分割虚拟磁盘<br>查看系统磁盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo fdisk <span class="_">-l</span></div></pre></td></tr></table></figure></p>
<blockquote><p>Device         Boot  Start      End  Sectors  Size Id Type<br>/dev/mmcblk0p1        8192   137215   129024   63M  c W95 FAT32 (LBA)<br>/dev/mmcblk0p2      137216 62333951 62196736 29.7G 83 Linux</p>
</blockquote>
<p>第一个分割区采用 FAT32 格式，由 8192 到 137215 ，约 63MB<br>第二个分割区采用 EXT4 ，由 137216  开始到结束<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/pi/NAS/</div><div class="line">sudo parted pi.img --script -- mklabel msdos</div><div class="line">sudo parted pi.img --script -- mkpart primary fat32 8192s 137215s</div><div class="line">sudo parted pi.img --script -- mkpart primary ext4 137216s -1</div></pre></td></tr></table></figure></p>
<p>4.挂载虚拟磁盘并格式化</p>
<p>opdevice：执行 losetup 连接 img 文件的 loop device<br>device：执行完 kpartx 后，虚拟磁盘代号<br>partBoot：由 device 加上 p1 组合而成的 FAT32 虚拟磁盘分区<br>partRoot：由 device 加上 p2 组合而成的 EXT4 虚拟磁盘分区<br>建立虚拟磁盘并分区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">loopdevice=`sudo losetup <span class="_">-f</span> --show pi.img`</div><div class="line">device=`sudo kpartx -va <span class="variable">$loopdevice</span> | sed -E <span class="string">'s/.*(loop[0-9])p.*/\1/g'</span> | head -1`</div><div class="line">device=<span class="string">"/dev/mapper/<span class="variable">$&#123;device&#125;</span>"</span></div><div class="line">partBoot=<span class="string">"<span class="variable">$&#123;device&#125;</span>p1"</span></div><div class="line">partRoot=<span class="string">"<span class="variable">$&#123;device&#125;</span>p2"</span></div></pre></td></tr></table></figure></p>
<p>格式化虚拟磁盘分区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkfs.vfat <span class="variable">$partBoot</span></div><div class="line">sudo mkfs.ext4 <span class="variable">$partRoot</span></div></pre></td></tr></table></figure></p>
<p>5.备份<br>fat32 虚拟磁盘分区建立好后直接用 cp 命令备份文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo mount -t vfat <span class="variable">$partBoot</span> /media</div><div class="line">sudo cp -rfp /boot/* /media/</div><div class="line">sudo umount /media</div></pre></td></tr></table></figure></p>
<p>ext4 linux 虚拟磁盘分区用 dump &amp; restore 备份<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mount -t ext4 <span class="variable">$partRoot</span> /media/</div><div class="line"><span class="built_in">cd</span> /media</div><div class="line">sudo dump -0uaf - / |  sudo restore -rf -</div><div class="line"><span class="built_in">cd</span></div><div class="line">sudo umount /media</div></pre></td></tr></table></figure></p>
<p>6.卸载虚拟光驱<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo kpartx <span class="_">-d</span> <span class="variable">$loopdevice</span></div><div class="line">sudo losetup <span class="_">-d</span> <span class="variable">$loopdevice</span></div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派－python模拟登陆weibo定时发送微博]]></title>
      <url>http://www.hugospi.com/2016/07/22/pythonweibo/</url>
      <content type="html"><![CDATA[<p>很久没玩微博，最近入手树莓派3，对着网上已有的项目实施，这次是通过python登陆微博定时发送微博内容，对于24*7工作的树莓派来说再合适不过了。</p>
<p>项目地址：<a href="https://github.com/HugoChanD/sinaWeibo.git" target="_blank" rel="external">https://github.com/HugoChanD/sinaWeibo.git</a><br><a id="more"></a><br>代码是别人写好的，直接在树莓派上下载使用就可以了。</p>
<p>主要结构如下：<br>程序分为3个模块：微博登录、定时发微博、微博内容生产</p>
<p>代码结构如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">sinaWeibo</div><div class="line">|----main.py</div><div class="line">|----sinaWeiboLogin.py</div><div class="line">|----config.py</div><div class="line">|----logger.py</div><div class="line">|----sendWeibo.py</div><div class="line">|----TextFactory.py</div><div class="line">      |spider</div><div class="line">      |----__init__.py</div><div class="line">      |----utility.py</div><div class="line">      |----http.py</div><div class="line">      |----spider.py</div><div class="line">      |----cnbeta.py          //解析cbbeta</div><div class="line">      |----cnblog.py          //解析博客园</div><div class="line">      |----techweb.py       /解析techweb</div><div class="line">      |----tuicool.py          //解析推酷</div><div class="line">      |----.....                      //更多解析</div></pre></td></tr></table></figure></p>
<p>使用方法：<br>1.下载地址：<a href="https://github.com/HugoChanD/sinaWeibo.git" target="_blank" rel="external">https://github.com/HugoChanD/sinaWeibo.git</a><br>2.修改配置文件config.py，把微博账号和密码改为你自己的，还可以设置发送时间（默认是30分钟一次）。<br>3.在TextFactory.py可以设置微博内容生成规则，也可以使用默认的规则。<br>4.运行main.py，python main.py。</p>
<p>依赖：<br>该代码使用了代码依赖requests和rsa，没有安装的话需要先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pip install rsa</div><div class="line">pip install requests</div><div class="line">`</div></pre></td></tr></table></figure></p>
<p>注意：需要在微博帐号安全保护中设置不用输入验证码登录</p>
<p>定时发送微博<br>新浪微博发微博的接口是：<br><a href="http://www.weibo.com/aj/mblog/add?ajwvr=6&amp;__rnd=时间戳" target="_blank" rel="external">http://www.weibo.com/aj/mblog/add?ajwvr=6&amp;__rnd=时间戳</a><br>时间戳使用int(time.time() * 1000即可设置。<br>Post提交数据：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="string">"location"</span> : <span class="string">"v6_content_home"</span>, </div><div class="line"><span class="string">"appkey"</span> : <span class="string">""</span>, </div><div class="line"><span class="string">"style_type"</span> : <span class="string">"1"</span>, </div><div class="line"><span class="string">"pic_id"</span> : <span class="string">""</span>, </div><div class="line"><span class="string">"text"</span> : 微博内容, </div><div class="line"><span class="string">"pdetail"</span> : <span class="string">""</span>, </div><div class="line"><span class="string">"rank"</span> : <span class="string">"0"</span>, </div><div class="line"><span class="string">"rankid"</span> : <span class="string">""</span>, </div><div class="line"><span class="string">"module"</span> : <span class="string">"stissue"</span>, </div><div class="line"><span class="string">"pub_type"</span> : <span class="string">"dialog"</span>, </div><div class="line"><span class="string">"_t"</span> : <span class="string">"0"</span>,</div></pre></td></tr></table></figure></p>
<p>提交数据时需要设置Headers:<br>self.http.headers[“Referer”] = “<a href="http://www.weibo.com/u/%s/home?wvr=5" target="_blank" rel="external">http://www.weibo.com/u/%s/home?wvr=5</a>“ % str(self.uid)<br>uid在登录时会返回。<br>在Python中启动一个定时器（Timer），每当定时器触发的时候向这个接口Post数据就能实现自动发微博了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">def newTimer(self):</div><div class="line">      self.timer = Timer(TIME_SLOG, self.main, ()).start()</div><div class="line"></div><div class="line">def stop(self):</div><div class="line">      <span class="built_in">log</span>(<span class="string">"结束任务"</span>)</div><div class="line">      self.timer.cancel()</div><div class="line">      pass</div><div class="line"></div><div class="line">def main(self):</div><div class="line">      self.sendWeibo()</div><div class="line"></div><div class="line">      <span class="keyword">if</span> TIMER_REPEAT:</div><div class="line">            self.newTimer()</div><div class="line"></div><div class="line">def sendWeibo(self):</div><div class="line">      text = TextFactory.getText()</div><div class="line">      self.update(text)</div><div class="line">      <span class="built_in">log</span>(u<span class="string">"发送微博："</span> + text)</div></pre></td></tr></table></figure>
<p>定义微博内容<br>TextFactory.py文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">spiders = [</div><div class="line">      Spider(miaopai.HOME_URL, miaopai.MiaopaParser()),</div><div class="line">      Spider(cnbeta.HOME_URL, cnbeta.CnbetaParser()),</div><div class="line">      Spider(cnblog.HOME_URL, cnblog.CnblogParser()),</div><div class="line">      Spider(techweb.HOME_URL, techweb.TechwebParser()),</div><div class="line">      Spider(tuicool.HOME_URL, tuicool.TuicoolParser()),</div><div class="line">      Spider(miaopai.HOME_URL, miaopai.MiaopaParser()),</div><div class="line">]</div><div class="line"></div><div class="line">currentIndex = 0</div><div class="line">count = len(spiders)</div><div class="line"></div><div class="line">def getText():</div><div class="line">      spider = nextSpider()</div><div class="line">      text = spider.getAMessage()</div><div class="line">      <span class="built_in">return</span> text</div><div class="line"></div><div class="line">def nextSpider():</div><div class="line">      global currentIndex</div><div class="line">      spider = spiders[currentIndex]</div><div class="line">      currentIndex = (currentIndex + 1) % count</div><div class="line">      <span class="built_in">return</span> spider</div></pre></td></tr></table></figure></p>
<p>最后添加开机自动启动python文件就可以了</p>
<p>引用原作者链接：<a href="http://blog.5long.me/2015/code-login-sina-weibo-update-weibo/" target="_blank" rel="external">http://blog.5long.me/2015/code-login-sina-weibo-update-weibo/</a></p>
<p>－－－－－－－－－－2016-09-07更新分界线－－－－－－－－－－<br>附上另外一个weibo客户端<br>项目地址：<a href="https://github.com/zhuzhezhe/weibobash" target="_blank" rel="external">https://github.com/zhuzhezhe/weibobash</a></p>
<p>直接安装 $pip install weibobash</p>
<p>使用</p>
<p>务必首先运行$weibobash -u输入用户名和密码以登陆</p>
<p>命令下使用$weibobash &lt;参数&gt;运行相应功能。</p>
<p>——–weibobash使用帮助——–</p>
<p>-h&lt;–help&gt;: 显示帮助信息</p>
<p>-u&lt;–user&gt;: 输入用户名和密码</p>
<p>-n&lt;–new&gt;: 显示20条最新微博</p>
<p>-a&lt;–add&gt;: 发布一条微博</p>
<p>内容可以自定义，这里我使用的是定时天气预报跟节假日信息跟树莓派的cpu温度等信息</p>
<p>python直接调用os.system weibobash -a  内容，crontab添加定时发布</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派-定时天气播报]]></title>
      <url>http://www.hugospi.com/2016/07/22/weather/</url>
      <content type="html"><![CDATA[<p>树莓派获取和风天气数据，然后通过百度语音合成，设置定时天气播报</p>
<p>1.首先要申请和风天气api和百度语音合成api<br>  和风天气：<a href="http://www.heweather.com" target="_blank" rel="external">http://www.heweather.com</a><br>    注册获取用户认证key<br>  百度语音：<a href="http://yuyin.baidu.com/tts/" target="_blank" rel="external">http://yuyin.baidu.com/tts/</a><br>    注册获取api key跟Secret Key<br><a id="more"></a><br>具体代码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line">import os</div><div class="line">import urllib</div><div class="line">import urllib2,json</div><div class="line">from datetime import date</div><div class="line">from os import path</div><div class="line">import sys</div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line">def get_city_id(cityname, search_<span class="built_in">type</span>=1):</div><div class="line">    ids = <span class="string">''</span></div><div class="line">    <span class="keyword">if</span> search_<span class="built_in">type</span> == 1:<span class="comment"># 查询城市ID</span></div><div class="line">        search = <span class="string">'allchina'</span></div><div class="line">        fn0 = <span class="string">'cityID'</span></div><div class="line">    <span class="keyword">elif</span> search_<span class="built_in">type</span> == 0:<span class="comment"># 查询景点ID</span></div><div class="line">        fn0 = <span class="string">'viewID'</span></div><div class="line">        search = <span class="string">'allattractions'</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="comment"># 代表type值出错</span></div><div class="line">        <span class="built_in">return</span> -1</div><div class="line">    fn = fn0+str(date.today())+<span class="string">'.txt'</span></div><div class="line">    try:</div><div class="line">        <span class="keyword">if</span> path.exists(fn):</div><div class="line">            fp = open(fn, <span class="string">'r'</span>)</div><div class="line">            context = fp.read()</div><div class="line">            fp.close()</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            fp = open(fn, <span class="string">'w'</span>)</div><div class="line">            url_city = <span class="string">'https://api.heweather.com/x3/citylist?search='</span>+search+<span class="string">'&amp;key=ae7baaf41f1b4b30b843f278869ab903'</span></div><div class="line">            req = urllib2.Request(url_city)</div><div class="line">            resp = urllib2.urlopen(req)</div><div class="line">            context = resp.read().decode(<span class="string">'utf-8'</span>)</div><div class="line">            <span class="comment"># print True</span></div><div class="line">            fp.write(context)</div><div class="line">            fp.close()</div><div class="line"></div><div class="line">        city_json = json.loads(context,encoding=<span class="string">'utf-8'</span>)</div><div class="line">        city_info = city_json[<span class="string">"city_info"</span>]</div><div class="line">        city_name = unicode(cityname, <span class="string">'utf-8'</span>)</div><div class="line">        <span class="comment"># print city_name</span></div><div class="line">        <span class="keyword">for</span> index, cities <span class="keyword">in</span> enumerate(city_info):</div><div class="line">            <span class="keyword">if</span> city_name <span class="keyword">in</span> cities[<span class="string">'city'</span>]:</div><div class="line">                <span class="built_in">print</span> cities[<span class="string">'city'</span>]</div><div class="line">                ids = cities[<span class="string">'id'</span>]</div><div class="line">                <span class="built_in">break</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="comment"># 之后将会返回-1</span></div><div class="line">            <span class="built_in">print</span> <span class="string">'您输入的城市或景点不存在，请反馈给管理员'</span></div><div class="line">    except IOError, e:</div><div class="line">        <span class="built_in">print</span> e</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        pass</div><div class="line">    <span class="built_in">return</span> ids</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#返回和风天气数据</span></div><div class="line">def get_city_weather(index, search_<span class="built_in">type</span>=1):</div><div class="line"></div><div class="line">    <span class="keyword">if</span> search_<span class="built_in">type</span> == 1:</div><div class="line">        search = <span class="string">'weather'</span></div><div class="line">    <span class="keyword">elif</span> search_<span class="built_in">type</span> == 0:</div><div class="line">        search = <span class="string">'attractions'</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="built_in">return</span> -1</div><div class="line">    url_weather = <span class="string">'https://api.heweather.com/x3/'</span>+search+<span class="string">'?cityid='</span>+index+<span class="string">'&amp;key=和风天气key'</span></div><div class="line">    req = urllib2.Request(url_weather)</div><div class="line">    resp = urllib2.urlopen(req)</div><div class="line">    context = resp.read()</div><div class="line">    weather_json = json.loads(context, encoding=<span class="string">'utf-8'</span>)</div><div class="line">    fp = open(<span class="string">"/home/pi/python/tianqi/test.txt"</span>, <span class="string">'w'</span>)</div><div class="line">    fp.write(context)</div><div class="line">    fp.close()</div><div class="line">    <span class="keyword">if</span> search_<span class="built_in">type</span> == 1:</div><div class="line">        weather = weather_json[<span class="string">"HeWeather data service 3.0"</span>][0][<span class="string">'daily_forecast'</span>][0]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        weather = weather_json</div><div class="line">    <span class="built_in">return</span> weather</div><div class="line"></div><div class="line"><span class="comment">#获取百度语音token</span></div><div class="line">def get_token():</div><div class="line">    api_key = <span class="string">"百度API Key"</span></div><div class="line">    sec_key = <span class="string">"百度Secret Key"</span></div><div class="line">    url = url=<span class="string">"https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id="</span>+api_key+<span class="string">"&amp;client_secret="</span>+sec_key</div><div class="line">    req = urllib2.Request(url)</div><div class="line">    resp = urllib2.urlopen(req)</div><div class="line">    context = resp.read().decode(<span class="string">'utf-8'</span>)</div><div class="line">    <span class="built_in">return</span> json.loads(context)[<span class="string">'access_token'</span>]</div><div class="line"></div><div class="line"><span class="comment">#获取需要的数据</span></div><div class="line">def get_wat():</div><div class="line">    city_id = <span class="string">"CN101280101"</span>  <span class="comment">#广州天气代码   </span></div><div class="line">    city_weather = get_city_weather(city_id)</div><div class="line">    a= city_weather[<span class="string">'tmp'</span>][<span class="string">'max'</span>]</div><div class="line">    b= city_weather[<span class="string">'tmp'</span>][<span class="string">'min'</span>]</div><div class="line">    c= city_weather[<span class="string">'cond'</span>][<span class="string">'txt_d'</span>]</div><div class="line">    d= city_weather[<span class="string">'cond'</span>][<span class="string">'txt_n'</span>]</div><div class="line">    e= city_weather[<span class="string">'date'</span>]</div><div class="line">    <span class="built_in">return</span> <span class="string">"天气预报  今天是 &#123;&#125;   最高温度&#123;&#125; 最低温度&#123;&#125; 日间天气&#123;&#125; 夜间天气&#123;&#125;"</span>.format(e,a,b,c,d)</div><div class="line"></div><div class="line">token=get_token()</div><div class="line">weather=get_wat() </div><div class="line"></div><div class="line"><span class="comment">#tts</span></div><div class="line">url = <span class="string">"http://tsn.baidu.com/text2audio?tex="</span>+weather+<span class="string">"&amp;lan=zh&amp;per=0&amp;pit=1&amp;spd=4&amp;cuid=b827ebcac3a2&amp;ctp=1&amp;tok="</span>+token</div><div class="line"></div><div class="line"><span class="comment">#播放</span></div><div class="line">try:</div><div class="line">    os.system(<span class="string">'/usr/bin/mplayer "%s"'</span> %(url))</div><div class="line">except Exception as e:</div><div class="line">    <span class="built_in">print</span>(<span class="string">'Exception'</span>,e)</div></pre></td></tr></table></figure>
<p>最后通过crontab定时启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">30 7 * * * sudo python /home/pi/python/weather.py</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://www.hugospi.com/2016/07/21/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
